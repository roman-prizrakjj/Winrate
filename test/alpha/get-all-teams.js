/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –í–°–ï–• –∫–æ–º–∞–Ω–¥ –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ teams —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
 * –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –≤ —É–ø—Ä–æ—â—ë–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
 */

const path = require('path');
require('dotenv').config({ path: path.resolve(__dirname, '..', '..', '.env.local') });
const { EmdCloud, AppEnvironment, AuthType } = require('@emd-cloud/sdk');
const fs = require('fs');

// ============================================
// –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
// ============================================
const CONFIG = {
  COLLECTION_ID: 'a8013391-320e-4fc7-9437-453cbc46d493', // teams
  LIMIT_PER_PAGE: 100, // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –∑–∞ –æ–¥–∏–Ω –∑–∞–ø—Ä–æ—Å
  USE_HUMAN_READABLE: true, // –í–ê–ñ–ù–û: –≤–∫–ª—é—á–∞–µ–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  SAVE_TO_JSON: true,
};

// ============================================
// –§–£–ù–ö–¶–ò–ò
// ============================================

/**
 * –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–º–∞–Ω–¥—ã –≤ —É–ø—Ä–æ—â—ë–Ω–Ω—É—é
 */
function transformTeam(team) {
  return {
    _id: team._id || null,
    name: team.data?.name || null,
    educational_organization_shortName: team.data?.educational_organization?.data?.shortName || null,
    teams_participants_ids: (team.data?.teams_participants || []).map(p => p._id).filter(Boolean),
    discipline_name: team.data?.discipline?.data?.name || null,
    division_id: team.data?.division?._id || null,
    division_name: team.data?.division?.data?.name || null,
  };
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ JSON —Ñ–∞–π–ª
 */
function saveToJson(data, filename) {
  if (!CONFIG.SAVE_TO_JSON) return;
  
  const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
  const fullFilename = `${filename}-${timestamp}.json`;
  const filepath = path.join(__dirname, fullFilename);
  
  fs.writeFileSync(filepath, JSON.stringify(data, null, 2), 'utf-8');
  console.log(`\nüíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: ${fullFilename}`);
  return fullFilename;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
 */
async function getAllTeams(client, collectionId) {
  console.log('\nüöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π...\n');
  
  const db = client.database(collectionId);
  const allTeams = [];
  let page = 0; // –ù–∞—á–∏–Ω–∞–µ–º —Å 0, –∫–∞–∫ –≤ —Ä–∞–±–æ—á–µ–º —Å–∫—Ä–∏–ø—Ç–µ
  let hasMore = true;
  
  while (hasMore) {
    console.log(`üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${page + 1}: –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ${CONFIG.LIMIT_PER_PAGE} –∑–∞–ø–∏—Å–µ–π...`);
    
    try {
      const result = await db.getRows({
        limit: CONFIG.LIMIT_PER_PAGE,
        page: page,
        useHumanReadableNames: CONFIG.USE_HUMAN_READABLE,
        // hasOptimiseResponse –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º - –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É–µ—Ç —Å useHumanReadableNames
      });
      
      console.log(`   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ: ${result.length} –∑–∞–ø–∏—Å–µ–π`);
      
      if (result.length === 0) {
        hasMore = false;
        console.log('   ‚ö†Ô∏è  –ü—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç - –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –∫–æ–Ω–µ—Ü –∫–æ–ª–ª–µ–∫—Ü–∏–∏');
      } else {
        allTeams.push(...result);
        page++;
        
        // –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –º–µ–Ω—å—à–µ —á–µ–º –ª–∏–º–∏—Ç - —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        if (result.length < CONFIG.LIMIT_PER_PAGE) {
          hasMore = false;
          console.log(`   ‚ÑπÔ∏è  –ü–æ–ª—É—á–µ–Ω–æ ${result.length} < ${CONFIG.LIMIT_PER_PAGE} - –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞`);
        }
      }
      
    } catch (error) {
      console.error(`   ‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${page}:`, error.message);
      hasMore = false;
    }
  }
  
  console.log(`\n‚úÖ –í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ –∫–æ–º–∞–Ω–¥: ${allTeams.length}`);
  return allTeams;
}

// ============================================
// –û–°–ù–û–í–ù–û–ô –ö–û–î
// ============================================

async function main() {
  console.log('=' .repeat(60));
  console.log('üì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ teams');
  console.log('=' .repeat(60));
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  if (!process.env.EMD_APP_ID || !process.env.EMD_API_TOKEN) {
    console.error('‚ùå –û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç EMD_APP_ID –∏–ª–∏ EMD_API_TOKEN –≤ .env.local');
    process.exit(1);
  }
  
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
    console.log('\nüîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ EMD Cloud SDK...');
    const client = new EmdCloud({
      environment: AppEnvironment.Server,
      appId: process.env.EMD_APP_ID,
      apiToken: process.env.EMD_API_TOKEN,
      defaultAuthType: AuthType.ApiToken
    });
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
    console.log('\n‚öôÔ∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:');
    console.log(`   Collection ID: ${CONFIG.COLLECTION_ID}`);
    console.log(`   –ó–∞–ø–∏—Å–µ–π –∑–∞ –∑–∞–ø—Ä–æ—Å: ${CONFIG.LIMIT_PER_PAGE}`);
    console.log(`   useHumanReadableNames: ${CONFIG.USE_HUMAN_READABLE}`);
    console.log(`   –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ JSON: ${CONFIG.SAVE_TO_JSON}`);
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
    const allTeams = await getAllTeams(client, CONFIG.COLLECTION_ID);
    
    if (allTeams.length === 0) {
      console.log('\n‚ö†Ô∏è  –ö–æ–ª–ª–µ–∫—Ü–∏—è –ø—É—Å—Ç–∞ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
      return;
    }
    
    // –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüîÑ –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö...');
    const transformedTeams = allTeams.map(transformTeam);
    console.log(`‚úÖ –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ: ${transformedTeams.length} –∫–æ–º–∞–Ω–¥`);
    
    // –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüìä –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö:');
    const withOrg = transformedTeams.filter(t => t.educational_organization_shortName).length;
    const withDiscipline = transformedTeams.filter(t => t.discipline_name).length;
    const withDivision = transformedTeams.filter(t => t.division_name).length;
    const avgParticipants = transformedTeams.reduce((sum, t) => sum + t.teams_participants_ids.length, 0) / transformedTeams.length;
    
    console.log(`   –° –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π: ${withOrg} (${(withOrg/transformedTeams.length*100).toFixed(1)}%)`);
    console.log(`   –° –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–æ–π: ${withDiscipline} (${(withDiscipline/transformedTeams.length*100).toFixed(1)}%)`);
    console.log(`   –° –¥–∏–≤–∏–∑–∏–æ–Ω–æ–º: ${withDivision} (${(withDivision/transformedTeams.length*100).toFixed(1)}%)`);
    console.log(`   –°—Ä–µ–¥–Ω–µ–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${avgParticipants.toFixed(1)}`);
    
    // –ü—Ä–∏–º–µ—Ä –ø–µ—Ä–≤–æ–π –∑–∞–ø–∏—Å–∏
    console.log('\nüìù –ü—Ä–∏–º–µ—Ä –ø–µ—Ä–≤–æ–π –∑–∞–ø–∏—Å–∏:');
    console.log(JSON.stringify(transformedTeams[0], null, 2));
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    if (CONFIG.SAVE_TO_JSON) {
      const filename = saveToJson(transformedTeams, 'teams-all-transformed');
      console.log(`\nüìÅ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω: ${filename}`);
    }
    
    // –†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö
    const transformedSize = JSON.stringify(transformedTeams).length;
    const originalSize = JSON.stringify(allTeams).length;
    console.log('\nüìè –†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö:');
    console.log(`   –û—Ä–∏–≥–∏–Ω–∞–ª: ${(originalSize / 1024).toFixed(2)} KB`);
    console.log(`   –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ: ${(transformedSize / 1024).toFixed(2)} KB`);
    console.log(`   –°–∂–∞—Ç–∏–µ: ${((1 - transformedSize/originalSize) * 100).toFixed(1)}%`);
    
    console.log('\n' + '='.repeat(60));
    console.log('‚úÖ –ì–æ—Ç–æ–≤–æ!');
    console.log('='.repeat(60));
    
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫
main();
