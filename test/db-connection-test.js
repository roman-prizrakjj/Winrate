// –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB API
// –ó–∞–ø—É—Å–∫: node test/db-connection-test.js

require('dotenv').config({ path: '.env.local' });
const fs = require('fs');
const path = require('path');

async function testDatabaseConnection() {
  const apiToken = process.env.MONGODB_API_TOKEN;
  const appId = process.env.MONGODB_APP_ID;
  
  if (!apiToken || !appId) {
    console.error('‚ùå –û—à–∏–±–∫–∞: API —Ç–æ–∫–µ–Ω –∏–ª–∏ App ID –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env.local');
    process.exit(1);
  }

  const baseUrl = `https://api.emd.one/api/${appId}`;
  console.log('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB...');
  
  try {
    const response = await fetch(`${baseUrl}/database`, {
      method: 'GET',
      headers: {
        'apitoken': apiToken,
        'Content-Type': 'application/json'
      }
    });

    console.log(`üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status} ${response.statusText}`);
    
    if (!response.ok) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', await response.text());
      return;
    }

    const data = await response.json();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');

    // ‚û§ –í—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–º–µ–Ω–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π –∏ –∏—Ö ID
    const collections = data.data.map(col => ({
      id: col.id,
      _id: col._id
    }));

    console.log('üì¶ –ö–æ–ª–ª–µ–∫—Ü–∏–∏:');
    console.table(collections);

    // ‚û§ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–∞–π–ª collections.json
    const filePath = path.join(__dirname, 'collections.json');
    fs.writeFileSync(filePath, JSON.stringify(collections, null, 2), 'utf8');
    console.log(`üíæ –ö–æ–ª–ª–µ–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: test/collections.json`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
  }
}

testDatabaseConnection();
